{"version":3,"sources":["img/parzibyte_logo.png","Nav.js","Constantes.js","AgregarVideojuego.js","FilaDeTablaDeVideojuego.js","VerVideojuegos.js","EditarVideojuego.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","props","state","mostrarMenu","intercambiarEstadoMenu","bind","ocultarMenu","this","setState","className","role","aria-label","href","alt","src","logo","style","maxHeight","onClick","aria-expanded","data-target","aria-hidden","activeClassName","to","target","rel","React","Component","Constantes","RUTA_API","AgregarVideojuego","videojuego","nombre","precio","calificacion","manejarCambio","manejarEnvioDeFormulario","onSubmit","htmlFor","autoFocus","required","placeholder","type","id","onChange","value","evento","preventDefault","cargaUtil","JSON","stringify","fetch","method","body","respuesta","json","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","error","clave","valor","videojuegoActualizado","parseFloat","FilaDeTablaDeVideojuego","eliminado","redireccionarParaEditar","eliminar","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","VerVideojuegos","videojuegos","map","EditarVideojuego","idVideojuego","match","params","withRouter","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cbcef4fe.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/parzibyte_logo.50131183.png\";","import React from \"react\";\nimport logo from \"./img/parzibyte_logo.png\";\nimport { NavLink } from \"react-router-dom\";\nclass Nav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mostrarMenu: false,\n    };\n    this.intercambiarEstadoMenu = this.intercambiarEstadoMenu.bind(this);\n    this.ocultarMenu = this.ocultarMenu.bind(this);\n  }\n\n  ocultarMenu() {\n    this.setState({\n      mostrarMenu: false,\n    });\n  }\n  intercambiarEstadoMenu() {\n    this.setState((state) => {\n      return {\n        mostrarMenu: !state.mostrarMenu,\n      };\n    });\n  }\n  render() {\n    return (\n      <nav\n        className=\"navbar is-warning\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\" href=\"https://parzibyte.me/l/fW8zGd\">\n            <img alt=\"\" src={logo} style={{ maxHeight: \"80px\" }} />\n          </a>\n          <button\n            onClick={this.intercambiarEstadoMenu}\n            className={`navbar-burger ${\n              this.state.mostrarMenu ? \"is-active\" : \"\"\n            } is-warning button`}\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n            data-target=\"navbarBasicExample\"\n          >\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </button>\n        </div>\n        <div\n          className={`navbar-menu ${this.state.mostrarMenu ? \"is-active\" : \"\"}`}\n        >\n          <div className=\"navbar-start\">\n            <NavLink\n              onClick={this.ocultarMenu}\n              activeClassName=\"is-active\"\n              className=\"navbar-item\"\n              to=\"/videojuegos/ver\"\n            >\n              Ver videojuegos\n            </NavLink>\n            <NavLink\n              onClick={this.ocultarMenu}\n              activeClassName=\"is-active\"\n              className=\"navbar-item\"\n              to=\"/videojuegos/agregar\"\n            >\n              Agregar videojuego\n            </NavLink>\n          </div>\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              <div className=\"buttons\">\n                <a\n                  target=\"_blank\"\n                  rel=\"noreferrer\"\n                  href=\"https://parzibyte.me/l/fW8zGd\"\n                  className=\"button is-primary\"\n                >\n                  <strong>Soporte y ayuda</strong>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\nexport default Nav;\n","const Constantes = {\n  RUTA_API: \"http://localhost/php\",\n};\nexport default Constantes;\n","import React from \"react\";\nimport Constantes from \"./Constantes\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Link } from \"react-router-dom\";\nclass AgregarVideojuego extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      videojuego: {\n        nombre: \"\",\n        precio: \"\",\n        calificacion: \"\",\n      },\n    };\n    // Indicarle a las funciones a quién nos referimos con \"this\"\n    this.manejarCambio = this.manejarCambio.bind(this);\n    this.manejarEnvioDeFormulario = this.manejarEnvioDeFormulario.bind(this);\n  }\n  render() {\n    return (\n      <div className=\"column is-one-third\">\n        <h1 className=\"is-size-3\">Agregar videojuego</h1>\n        <ToastContainer></ToastContainer>\n        <form className=\"field\" onSubmit={this.manejarEnvioDeFormulario}>\n          <div className=\"form-group\">\n            <label className=\"label\" htmlFor=\"nombre\">\n              Nombre:\n            </label>\n            <input\n              autoFocus\n              required\n              placeholder=\"Nombre\"\n              type=\"text\"\n              id=\"nombre\"\n              onChange={this.manejarCambio}\n              value={this.state.videojuego.nombre}\n              className=\"input\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"label\" htmlFor=\"precio\">\n              Precio:\n            </label>\n            <input\n              required\n              placeholder=\"Precio\"\n              type=\"number\"\n              id=\"precio\"\n              onChange={this.manejarCambio}\n              value={this.state.videojuego.precio}\n              className=\"input\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"label\" htmlFor=\"calificacion\">\n              Calificación:\n            </label>\n            <input\n              required\n              placeholder=\"Calificación\"\n              type=\"number\"\n              id=\"calificacion\"\n              onChange={this.manejarCambio}\n              value={this.state.videojuego.calificacion}\n              className=\"input\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <button className=\"button is-success mt-2\">Guardar</button>\n            &nbsp;\n            <Link to=\"/videojuegos/ver\" className=\"button is-primary mt-2\">\n              Volver\n            </Link>\n          </div>\n        </form>\n      </div>\n    );\n  }\n  async manejarEnvioDeFormulario(evento) {\n    evento.preventDefault();\n    // Codificar nuestro videojuego como JSON\n\n    const cargaUtil = JSON.stringify(this.state.videojuego);\n    // ¡Y enviarlo!\n    const respuesta = await fetch(\n      `${Constantes.RUTA_API}/guardar_videojuego.php`,\n      {\n        method: \"POST\",\n        body: cargaUtil,\n      }\n    );\n    const exitoso = await respuesta.json();\n    if (exitoso) {\n      toast(\"Videojuego guardado 🎮\", {\n        position: \"top-left\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      this.setState({\n        videojuego: {\n          nombre: \"\",\n          precio: \"\",\n          calificacion: \"\",\n        },\n      });\n    } else {\n      toast.error(\"Error guardando. Intenta de nuevo\");\n    }\n  }\n  manejarCambio(evento) {\n    // Extraer la clave del estado que se va a actualizar, así como el valor\n    const clave = evento.target.id;\n    let valor = evento.target.value;\n    this.setState((state) => {\n      const videojuegoActualizado = state.videojuego;\n      // Si es la calificación o el nombre, necesitamos castearlo a entero\n      if (clave !== \"nombre\") {\n        valor = parseFloat(valor);\n      }\n      // Actualizamos el valor del videojuego, solo en el campo que se haya cambiado\n      videojuegoActualizado[clave] = valor;\n      return {\n        videojuego: videojuegoActualizado,\n      };\n    });\n  }\n}\n\nexport default AgregarVideojuego;\n","import React from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport Swal from \"sweetalert2\";\nimport Constantes from \"./Constantes\";\nclass FilaDeTablaDeVideojuego extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Si han eliminado este juego, no necesitamos mostrarlo\n      eliminado: false,\n    };\n    this.redireccionarParaEditar = this.redireccionarParaEditar.bind(this);\n    this.eliminar = this.eliminar.bind(this);\n  }\n  redireccionarParaEditar() {\n    return <Redirect to={`/videojuegos/editar/${this.props.videojuego.id}`} />;\n  }\n  async eliminar() {\n    const resultado = await Swal.fire({\n      title: \"Confirmación\",\n      text: `¿Eliminar \"${this.props.videojuego.nombre}\"?`,\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3298dc\",\n      cancelButtonColor: \"#f14668\",\n      cancelButtonText: \"No\",\n      confirmButtonText: \"Sí, eliminar\",\n    });\n    // Si no confirma, detenemos la función\n    if (!resultado.value) {\n      return;\n    }\n    const respuesta = await fetch(\n      `${Constantes.RUTA_API}/eliminar_videojuego.php?id=${this.props.videojuego.id}`,\n      {\n        method: \"DELETE\",\n      }\n    );\n    const exitoso = await respuesta.json();\n    if (exitoso) {\n      toast(\"Videojuego eliminado \", {\n        position: \"top-left\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      this.setState({\n        eliminado: true,\n      });\n    } else {\n      toast.error(\"Error eliminando. Intenta de nuevo\");\n    }\n  }\n  render() {\n    if (this.state.eliminado) {\n      return null;\n    }\n    return (\n      <tr>\n        <td>{this.props.videojuego.nombre}</td>\n        <td>{this.props.videojuego.precio}</td>\n        <td>{this.props.videojuego.calificacion}</td>\n        <td>\n          <Link\n            to={`/videojuegos/editar/${this.props.videojuego.id}`}\n            className=\"button is-info\"\n          >\n            Editar\n          </Link>\n        </td>\n        <td>\n          <button onClick={this.eliminar} className=\"button is-danger\">\n            Eliminar\n          </button>\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default FilaDeTablaDeVideojuego;\n","import React from \"react\";\nimport Constantes from \"./Constantes\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport FilaDeTablaDeVideojuego from \"./FilaDeTablaDeVideojuego\";\nclass VerVideojuegos extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      videojuegos: [],\n    };\n  }\n  async componentDidMount() {\n    const respuesta = await fetch(\n      `${Constantes.RUTA_API}/obtener_videojuegos.php`\n    );\n    const videojuegos = await respuesta.json();\n    this.setState({\n      videojuegos: videojuegos,\n    });\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"column\">\n          <h1 className=\"is-size-3\">Ver videojuegos</h1>\n          <ToastContainer></ToastContainer>\n        </div>\n        <div className=\"table-container\">\n          <table className=\"table is-fullwidth is-bordered\">\n            <thead>\n              <tr>\n                <th>Nombre</th>\n                <th>Precio</th>\n                <th>Calificación</th>\n                <th>Editar</th>\n                <th>Eliminar</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.videojuegos.map((videojuego) => {\n                return (\n                  <FilaDeTablaDeVideojuego\n                    key={videojuego.id}\n                    videojuego={videojuego}\n                  ></FilaDeTablaDeVideojuego>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default VerVideojuegos;\n","import React from \"react\";\nimport Constantes from \"./Constantes\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Link, withRouter } from \"react-router-dom\";\nclass EditarVideojuego extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      videojuego: {\n        id: \"\",\n        nombre: \"\",\n        precio: \"\",\n        calificacion: \"\",\n      },\n    };\n    // Indicarle a las funciones a quién nos referimos con \"this\"\n    this.manejarCambio = this.manejarCambio.bind(this);\n    this.manejarEnvioDeFormulario = this.manejarEnvioDeFormulario.bind(this);\n  }\n  async componentDidMount() {\n    // Obtener ID de URL\n    const idVideojuego = this.props.match.params.id;\n    // Llamar a la API para obtener los detalles\n    const respuesta = await fetch(\n      `${Constantes.RUTA_API}/obtener_videojuego.php?id=${idVideojuego}`\n    );\n    const videojuego = await respuesta.json();\n    // \"refrescar\" el formulario\n    this.setState({\n      videojuego: videojuego,\n    });\n  }\n  render() {\n    return (\n      <div className=\"column is-one-third\">\n        <h1 className=\"is-size-3\">Editando videojuego</h1>\n        <ToastContainer></ToastContainer>\n        <form className=\"field\" onSubmit={this.manejarEnvioDeFormulario}>\n          <div className=\"form-group\">\n            <label className=\"label\" htmlFor=\"nombre\">\n              Nombre:\n            </label>\n            <input\n              autoFocus\n              required\n              placeholder=\"Nombre\"\n              type=\"text\"\n              id=\"nombre\"\n              onChange={this.manejarCambio}\n              value={this.state.videojuego.nombre}\n              className=\"input\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"label\" htmlFor=\"precio\">\n              Precio:\n            </label>\n            <input\n              required\n              placeholder=\"Precio\"\n              type=\"number\"\n              id=\"precio\"\n              onChange={this.manejarCambio}\n              value={this.state.videojuego.precio}\n              className=\"input\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label className=\"label\" htmlFor=\"calificacion\">\n              Calificación:\n            </label>\n            <input\n              required\n              placeholder=\"Calificación\"\n              type=\"number\"\n              id=\"calificacion\"\n              onChange={this.manejarCambio}\n              value={this.state.videojuego.calificacion}\n              className=\"input\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <button className=\"button is-success mt-2\">Guardar</button>\n            &nbsp;\n            <Link to=\"/videojuegos/ver\" className=\"button is-primary mt-2\">\n              Volver\n            </Link>\n          </div>\n        </form>\n      </div>\n    );\n  }\n  async manejarEnvioDeFormulario(evento) {\n    evento.preventDefault();\n    // Codificar nuestro videojuego como JSON\n\n    const cargaUtil = JSON.stringify(this.state.videojuego);\n    // ¡Y enviarlo!\n    const respuesta = await fetch(\n      `${Constantes.RUTA_API}/actualizar_videojuego.php`,\n      {\n        method: \"PUT\",\n        body: cargaUtil,\n      }\n    );\n    const exitoso = await respuesta.json();\n    if (exitoso) {\n      toast(\"Videojuego guardado 🎮\", {\n        position: \"top-left\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    } else {\n      toast.error(\"Error guardando. Intenta de nuevo\");\n    }\n  }\n  manejarCambio(evento) {\n    // Extraer la clave del estado que se va a actualizar, así como el valor\n    const clave = evento.target.id;\n    let valor = evento.target.value;\n    this.setState((state) => {\n      const videojuegoActualizado = state.videojuego;\n      // Si es la calificación o el nombre, necesitamos castearlo a entero\n      if (clave !== \"nombre\") {\n        valor = parseFloat(valor);\n      }\n      // Actualizamos el valor del videojuego, solo en el campo que se haya cambiado\n      videojuegoActualizado[clave] = valor;\n      return {\n        videojuego: videojuegoActualizado,\n      };\n    });\n  }\n}\n\nexport default withRouter(EditarVideojuego);\n","import Nav from \"./Nav\";\nimport AgregarVideojuego from \"./AgregarVideojuego\";\nimport VerVideojuegos from \"./VerVideojuegos\";\nimport EditarVideojuego from \"./EditarVideojuego\";\nimport { Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div>\n      <Nav></Nav>\n      <div className=\"section\">\n        <div className=\"columns\">\n          <Switch>\n            <Route path=\"/videojuegos/agregar\">\n              <AgregarVideojuego></AgregarVideojuego>\n            </Route>\n            <Route path=\"/videojuegos/editar/:id\">\n              <EditarVideojuego></EditarVideojuego>\n            </Route>\n            <Route path=\"/videojuegos/ver\">\n              <VerVideojuegos></VerVideojuegos>\n            </Route>\n            <Route path=\"/\">\n              <VerVideojuegos></VerVideojuegos>\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bulma/css/bulma.css\";\nimport \"./style.css\";\nimport { HashRouter as Router } from \"react-router-dom\";\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}